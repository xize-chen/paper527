{"version":3,"sources":["constants/sessionKey.js","serviceWorker.js","reducer/authReducer.js","reducer/projectReducer.js","reducer/rootReducer.js","config/fbConfig.js","components/GlobalStyles.js","components/statistic/ResponseDialog.js","constants/route_path.js","pages/SignOut.js","constants/info.js","components/Logo.js","components/DashboardNavbar.js","config/menuAdmin.js","config/menuUser.js","config/currentUser.js","config/menu.js","components/NavItem.js","components/DashboardSidebar.js","services/Server.js","components/DashboardLayout.js","components/MainNavbar.js","components/MainLayout.js","components/account/AccountProfile.js","components/account/AccountProfileDetails.js","pages/Account.js","pages/Login.js","pages/NotFound.js","pages/Register.js","components/statistic/CardData.js","utils/numberWithCommas.js","components/statistic/Country.js","components/statistic/CardComboData.js","components/statistic/SummaryClusterLocal.js","components/statistic/TrendLine.js","components/statistic/LocalCovidStatistics.js","components/statistic/CasesRank.js","components/statistic/TestsRank.js","components/statistic/SummaryClusterTotal.js","components/statistic/PieChart.js","components/statistic/Map.js","components/statistic/WorldCovidStatistics.js","components/statistic/DoubleTrendLine.js","components/statistic/VPCompareCovidStatistics.js","pages/Dashboard.js","config/routes.js","theme/index.js","theme/shadows.js","theme/typography.js","config/logger.js","App.js","index.js"],"names":["module","exports","ACCOUNT_KEY","SETTINGS_KEY","DEFAULT_COUNTRY","Boolean","window","location","hostname","match","initState","authError","authReducer","state","action","type","console","log","err","message","project","id","title","content","projectReducer","rootReducer","combineReducers","auth","firestore","firestoreReducer","firebase","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","ResponseDialog","open","handleClose","callback","Dialog","onClose","DialogTitle","disableTypography","Typography","variant","DialogContent","dividers","DialogContentText","DialogActions","Button","onClick","color","autoFocus","SignOut","close","navigate","useNavigate","useFirebase","setPersistence","Auth","Persistence","SESSION","then","signOut","sessionStorage","clear","paths","replace","catch","error","Logo","props","alt","src","DashboardNavbar","onMobileNavOpen","rest","useState","notifications","responseOpen","setResponseOpen","AppBar","elevation","Toolbar","to","Box","sx","flexGrow","Hidden","lgDown","Tooltip","IconButton","Badge","badgeContent","length","lgUp","items","href","icon","BarChartIcon","UserIcon","InputIcon","user","session","currentUser","i","key","includes","JSON","parse","getItem","email","menu","menuAdmin","menuUser","NavItem","Icon","validate","useLocation","active","matchPath","path","end","pathname","ListItem","disableGutters","display","py","fontWeight","justifyContent","letterSpacing","textTransform","mr","size","DashboardSidebar","onMobileClose","openMobile","currentAccount","sessionKey","validateFunc","useEffect","flexDirection","alignItems","p","Avatar","component","RouterLink","cursor","first_name","last_name","Divider","List","map","item","Drawer","anchor","PaperProps","top","defaultProps","baseURL","DashboardLayoutRoot","experimentalStyled","theme","palette","background","default","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","isMobileNavOpen","setMobileNavOpen","MainNavbar","MainLayoutRoot","paper","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","AccountProfile","account","alert","setAlert","handleAlertClose","isError","isOpen","Card","CardContent","gutterBottom","reg_time","CardActions","htmlFor","fullWidth","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","getSummaryOfWorld","axios","get","res","data","value","Items","getTopTenCases","getTopTenTests","getSummaryByLocation","iso","getPastYearDataByLocation","signUp","strAcc","stringify","post","signIn","pass","getAccount","result","selectedCountry","country","setItem","saveInfo","put","getCountries","AccountProfileDetails","update","saveDetail","userService","isSuccess","status","alterSuccess","handleChange","event","target","name","autoComplete","noValidate","CardHeader","subheader","Grid","container","spacing","md","xs","TextField","helperText","label","onChange","required","disabled","Account","slice","accountVal","setAccountVal","Helmet","minHeight","Container","maxWidth","lg","Login","alertOpen","setAlertOpen","errorMsg","setErrorMsg","initialValues","password","validationSchema","Yup","shape","max","onSubmit","credentials","setSubmitting","setErrors","signInWithEmailAndPassword","start","Date","now","service","undefined","code","errors","handleBlur","handleSubmit","isSubmitting","touched","values","mb","onBlur","Link","NotFound","align","textAlign","style","marginTop","Register","firstName","lastName","policy","matches","oneOf","creds","createUserWithEmailAndPassword","errorCode","errorMessage","ml","Checkbox","checked","underline","FormHelperText","CardData","metric","metricValue","numberWithCommas","x","toString","Country","valueChanged","setValue","countries","setCountries","countryArr","array","push","Autocomplete","getOptionSelected","option","optionValue","newValue","options","getOptionLabel","renderInput","params","CardComboData","CardCluster","summary","locationChanged","dashInfo","date","detailDatas","total_cases","new_cases","total_deaths","new_deaths","total_tests","new_tests","total_tests_per_thousand","new_tests_per_thousand","position","sm","xl","TrendLine","past12Month","confirmed","myData","labels","datasets","fill","borderColor","text","fontSize","legend","LocalCovidStatistics","initLocal","setInitLocal","loadData","varLocation","resPast12Month","loadDataByAccount","currentLocation","accountVar","newLocation","table","minWidth","CasesRank","topTenCases","classes","rows","cases","TableContainer","Paper","Table","className","TableHead","TableRow","TableCell","TableBody","row","scope","DeathRank","topTenTests","tests","SummaryClusterTotal","initWorld","worldSummary","PieChart","top5","borderWidth","maintainAspectRatio","Map","totalSumCases","reduce","b","radius","Number","latitude","longitude","deaths","MapContainer","center","zoom","scrollWheelZoom","TileLayer","url","MapConsumer","getCenter","on","e","latlng","lat","lng","getZoom","index","CircleMarker","fillColor","fillOpacity","Popup","WorldCovidStatistics","topTenDeaths","setInitWorld","resSummary","resTopTenCases","resTopTenTests","DoubleTrendLine","line","dataset","clone","require","VPCompareCovidStatistics","defaultCountry","setDataset","refreshLines","isCopy","datasetClone","DashboardTask","Tabs","parValue","Tab","routes","isLoggedIn","element","children","Dashboard","createMuiTheme","colors","common","white","primary","contrastText","main","secondary","shadows","typography","h1","h2","h3","h4","h5","h6","overline","logger","oldConsoleLog","pub","App","enableLogger","routing","useRoutes","isLoaded","isEmpty","ThemeProvider","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","getFirebase","getFirestore","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","dispatch","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7226e738.chunk.js","sourcesContent":["const ACCOUNT_KEY = 'account';\r\nconst SETTINGS_KEY = 'settings';\r\nconst DEFAULT_COUNTRY = 'New Zealand';\r\n\r\nmodule.exports = {\r\n  ACCOUNT_KEY,\r\n  SETTINGS_KEY,\r\n  DEFAULT_COUNTRY\r\n};\r\n","/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log('login failed');\r\n      return {\r\n        ...state,\r\n        authError: 'login failed'\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        authError: null\r\n      };\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error');\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  project: [\r\n    { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n    { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n    { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\r\n  ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('project created', action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyC5mCg16UCn7KvPs3R-WohWgEFjiuNsTZI',\r\n  authDomain: 'auto-test-platform-aeadd.firebaseapp.com',\r\n  databaseURL: 'https://auto-test-platform-aeadd-default-rtdb.firebaseio.com',\r\n  projectId: 'auto-test-platform-aeadd',\r\n  storageBucket: 'auto-test-platform-aeadd.appspot.com',\r\n  messagingSenderId: '818001159406',\r\n  appId: '1:818001159406:web:ed8ccddfd14d4ac7cf7fff'\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.firestore.setLogLevel('debug');\r\n\r\nexport default firebase;\r\n","import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    html: {\r\n      '-webkit-font-smoothing': 'antialiased',\r\n      '-moz-osx-font-smoothing': 'grayscale',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    body: {\r\n      backgroundColor: '#f4f6f8',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    a: {\r\n      textDecoration: 'none'\r\n    },\r\n    '#root': {\r\n      height: '100%',\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ResponseDialog = ({\r\n  open, handleClose, message, callback\r\n}) => {\r\n  const handleConfirm = () => {\r\n    handleClose();\r\n    callback();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\" disableTypography>\r\n        <Typography variant=\"h3\">\r\n          Information\r\n        </Typography>\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {message}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleConfirm} color=\"primary\" autoFocus variant=\"outlined\">\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nResponseDialog.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  message: PropTypes.string.isRequired,\r\n  callback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ResponseDialog;\r\n","export default {\r\n  dashboard: '/app/dashboard',\r\n  dashboard_total: '/app/dashboard/total',\r\n  dashboard_compare: '/app/dashboard/compare',\r\n  account: '/app/account',\r\n  settings: '/app/settings',\r\n  login: '/login',\r\n  not_found: '/404',\r\n  register: '/register',\r\n};\r\n","import { useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { useFirebase } from 'react-redux-firebase';\r\nimport MSG_SIGN_OUT from 'src/constants/info';\r\nimport ResponseDialog from 'src/components/statistic/ResponseDialog';\r\nimport paths from 'src/constants/route_path';\r\n\r\nconst SignOut = ({ open, close }) => {\r\n  const navigate = useNavigate();\r\n  const firebase = useFirebase();\r\n  const auth = firebase.auth();\r\n\r\n  const handleSignOut = () => {\r\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)\r\n      .then(() => auth.signOut().then(() => {\r\n        // Sign-out successful.\r\n        window.sessionStorage.clear();\r\n        navigate(paths.login, { replace: true });\r\n      }).catch((error) => {\r\n        // An error happened.\r\n        console.error(error);\r\n      }));\r\n  };\r\n  return (\r\n    <ResponseDialog\r\n      open={open}\r\n      handleClose={close}\r\n      message={MSG_SIGN_OUT}\r\n      callback={handleSignOut}\r\n    />\r\n  );\r\n};\r\n\r\nSignOut.propTypes = {\r\n  open: PropTypes.bool,\r\n  close: PropTypes.func\r\n};\r\nexport default SignOut;\r\n","const MSG_SIGN_OUT = 'Are you sure you want to sign out';\r\nexport default MSG_SIGN_OUT;\r\n","const Logo = (props) => <img alt=\"Logo\" src=\"/static/logo.svg\" {...props} />;\r\n\r\nexport default Logo;\r\n","import { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport SignOut from 'src/pages/SignOut';\r\nimport Logo from './Logo';\r\n\r\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\r\n  const [notifications] = useState([]);\r\n  const [responseOpen, setResponseOpen] = useState(false);\r\n  const onHandleSignOut = () => setResponseOpen(true);\r\n\r\n  return (\r\n    <AppBar elevation={0} {...rest}>\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        <SignOut\r\n          open={responseOpen}\r\n          close={() => setResponseOpen(false)}\r\n        />\r\n        <Hidden lgDown>\r\n          <Tooltip title=\"Notifications\">\r\n            <IconButton color=\"inherit\">\r\n              <Badge\r\n                badgeContent={notifications.length}\r\n                color=\"primary\"\r\n                variant=\"dot\"\r\n              >\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Sign Out\">\r\n            <IconButton color=\"inherit\" onClick={onHandleSignOut}>\r\n              <InputIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nDashboardNavbar.propTypes = {\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default DashboardNavbar;\r\n","import {\r\n  BarChart as BarChartIcon,\r\n  User as UserIcon,\r\n} from 'react-feather';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport paths from 'src/constants/route_path';\r\n\r\nconst items = [\r\n  {\r\n    href: paths.dashboard,\r\n    icon: BarChartIcon,\r\n    title: 'Dashboard'\r\n  },\r\n  {\r\n    href: paths.account,\r\n    icon: UserIcon,\r\n    title: 'Account'\r\n  },\r\n  {\r\n    href: paths.login,\r\n    icon: InputIcon,\r\n    title: 'Sign Out'\r\n  },\r\n];\r\n\r\nexport default items;\r\n","import {\r\n  BarChart as BarChartIcon,\r\n  User as UserIcon,\r\n\r\n} from 'react-feather';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport paths from 'src/constants/route_path';\r\n\r\nconst items = [\r\n  {\r\n    href: paths.dashboard,\r\n    icon: BarChartIcon,\r\n    title: 'Dashboard'\r\n  },\r\n  {\r\n    href: paths.account,\r\n    icon: UserIcon,\r\n    title: 'Account'\r\n  },\r\n  {\r\n    href: paths.login,\r\n    icon: InputIcon,\r\n    title: 'Sign Out'\r\n  },\r\n];\r\n\r\nexport default items;\r\n","const user = () => {\r\n  const session = window.sessionStorage;\r\n  let currentUser = {};\r\n  for (let i = 0; i < session.length; i++) {\r\n    if (session.key(i).includes('firebase')) {\r\n      currentUser = JSON.parse(session.getItem(session.key(i)));\r\n      break;\r\n    }\r\n  }\r\n  return {\r\n    email: currentUser === null ? '' : currentUser.email,\r\n    // uid: currentUser === null ? '' : JSON.stringify(currentUser.uid),\r\n    // isAdmin: currentUser === null ? false : JSON.stringify(currentUser.email).includes('admin'),\r\n  };\r\n};\r\n\r\nexport default user;\r\n","import menuAdmin from './menuAdmin';\r\nimport menuUser from './menuUser';\r\nimport currentUser from './currentUser';\r\n\r\nconst menu = () => {\r\n  console.log(currentUser().email);\r\n  if (currentUser().email.includes('admin')) {\r\n    return menuAdmin;\r\n  }\r\n  return menuUser;\r\n};\r\n\r\nexport default menu;\r\n","import {\r\n  matchPath,\r\n  useLocation,\r\n  useNavigate\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, ListItem } from '@material-ui/core';\r\n\r\nconst NavItem = ({\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  validate,\r\n  ...rest\r\n}) => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const active = href ? !!matchPath({\r\n    path: href,\r\n    end: false\r\n  }, location.pathname) : false;\r\n\r\n  const navigateToHref = () => {\r\n    if (validate(href)) {\r\n      navigate(href, { replace: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListItem\r\n      disableGutters\r\n      sx={{\r\n        display: 'flex',\r\n        py: 0\r\n      }}\r\n      {...rest}\r\n    >\r\n      <Button\r\n        sx={{\r\n          color: 'text.secondary',\r\n          fontWeight: 'medium',\r\n          justifyContent: 'flex-start',\r\n          letterSpacing: 0,\r\n          py: 1.25,\r\n          textTransform: 'none',\r\n          width: '100%',\r\n          ...(active && {\r\n            color: 'primary.main'\r\n          }),\r\n          '& svg': {\r\n            mr: 1\r\n          }\r\n        }}\r\n        onClick={navigateToHref}\r\n      >\r\n        {Icon && (\r\n          <Icon size=\"20\" />\r\n        )}\r\n        <span>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string,\r\n  validate: PropTypes.func,\r\n};\r\n\r\nexport default NavItem;\r\n","import { useEffect, useState } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport SignOut from 'src/pages/SignOut';\r\nimport paths from 'src/constants/route_path';\r\nimport menu from 'src/config/menu';\r\nimport sessionKey from 'src/constants/sessionKey';\r\nimport NavItem from './NavItem';\r\n\r\nconst session = window.sessionStorage;\r\n\r\nconst DashboardSidebar = ({ onMobileClose, openMobile }) => {\r\n  const location = useLocation();\r\n  const [responseOpen, setResponseOpen] = useState(false);\r\n  const currentAccount = JSON.parse(session.getItem(sessionKey.ACCOUNT_KEY));\r\n  const validateFunc = (href) => {\r\n    if (href !== paths.login) {\r\n      return true;\r\n    }\r\n    setResponseOpen(true);\r\n    return false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%'\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          p: 2\r\n        }}\r\n      >\r\n        <Avatar\r\n          component={RouterLink}\r\n          src=\"/static/images/avatars/avatar_1.png\"\r\n          sx={{\r\n            cursor: 'pointer',\r\n            width: 64,\r\n            height: 64\r\n          }}\r\n          to={paths.account}\r\n        />\r\n        <Typography color=\"textPrimary\" variant=\"h5\">\r\n          {`${currentAccount.first_name} ${currentAccount.last_name}` }\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box sx={{ p: 2 }}>\r\n        <List>\r\n          {menu().map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n              validate={validateFunc}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box sx={{ flexGrow: 1 }} />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <SignOut\r\n        open={responseOpen}\r\n        close={() => setResponseOpen(false)}\r\n      />\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: 256\r\n            }\r\n          }}\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden lgDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          open\r\n          variant=\"persistent\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: 256,\r\n              top: 64,\r\n              height: 'calc(100% - 64px)'\r\n            }\r\n          }}\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nDashboardSidebar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nDashboardSidebar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false\r\n};\r\n\r\nexport default DashboardSidebar;\r\n","// import http from 'src/utils/http-common';\r\n/* eslint class-methods-use-this: [\"error\", { \"exceptMethods\": [\"getSummaryOfWorld\", \"getTotalCases\",\r\n   \"getLocationOfCountry\",\"getTotalCaseByMonth\",] }] */\r\n// eslint-disable-next-line consistent-return\r\n\r\nimport axios from 'axios';\r\nimport sessionKey from '../constants/sessionKey';\r\n\r\nconst env = process.env.NODE_ENV;\r\nlet baseURL;\r\n\r\nif (env === 'development') {\r\n  baseURL = 'http://localhost:8080';\r\n} else if (env === 'production') {\r\n  baseURL = '/api';\r\n}\r\n\r\nconst getSummaryOfWorld = async () => {\r\n  const res = await axios\r\n    .get(`${baseURL}/get_summary_world`)\r\n    .catch((err) => console.log(err));\r\n\r\n  return res.data.value.Items;\r\n};\r\n\r\nconst getTopTenCases = async () => {\r\n  const res = await axios\r\n    .get(`${baseURL}/get-top-10-by-death-case`)\r\n    .catch((err) => console.log(err));\r\n\r\n  return res.data.value.Items;\r\n};\r\n\r\nconst getTopTenTests = async () => {\r\n  const res = await axios\r\n    .get(`${baseURL}/get-top-10-by-tests`)\r\n    .catch((err) => console.log(err));\r\n\r\n  return res.data.value.Items;\r\n};\r\n\r\nconst getSummaryByLocation = async (iso) => {\r\n  const res = await axios\r\n    .get(`${baseURL}/get_total_cases_by_iso?iso=${iso}`)\r\n    .catch((err) => console.log(err));\r\n  return res.data.value.Items;\r\n};\r\n\r\nconst getPastYearDataByLocation = async (location) => {\r\n  const res = await axios\r\n    .get(`${baseURL}/get_past_12_month_by_iso?iso=${location}`)\r\n    .catch((err) => console.log(err));\r\n\r\n  return res.data.value.Items;\r\n};\r\n\r\nconst signUp = async (account) => {\r\n  const strAcc = JSON.stringify(account);\r\n  axios\r\n    .post(`${baseURL}/sign_up?account=${strAcc}`)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst signIn = async (email, pass) => {\r\n  const res = await axios\r\n    .post(`${baseURL}/sign_in?email=${email}&password=${pass}`)\r\n    .catch((err) => console.log(err));\r\n  return res.data.value;\r\n};\r\n\r\nconst getAccount = async (email) => {\r\n  const res = await axios\r\n    .get(`${baseURL}/query_by_email?email=${email}`)\r\n    .catch((err) => console.log(err));\r\n  console.log(`res.data.value: ${JSON.stringify(res.data.value)}`);\r\n  const result = res.data.value.Items.length > 0 ? res.data.value.Items[0] : {};\r\n  if (res.data.value.Items.length > 0) {\r\n    result.selectedCountry = result.country;\r\n  }\r\n  window.sessionStorage.setItem(sessionKey.ACCOUNT_KEY, JSON.stringify(result));\r\n  return result;\r\n};\r\n\r\nconst saveInfo = async (account) => {\r\n  const strAcc = JSON.stringify(account);\r\n  const res = await axios\r\n    .put(`${baseURL}/save_account?account=${strAcc}`)\r\n    .catch((err) => console.log(err));\r\n  console.log(res);\r\n  return res;\r\n};\r\n\r\nconst getCountries = async () => {\r\n  const res = await axios\r\n    .get(`${baseURL}/get_location_country`)\r\n    .catch((err) => console.log(err));\r\n  // console.log(`getCountries: ${JSON.stringify(res.data.value)}`);\r\n  const result = res.data.value.Items.length > 0 ? res.data.value.Items : {};\r\n  return result;\r\n};\r\n\r\nexport default {\r\n  getSummaryOfWorld,\r\n  getTopTenCases,\r\n  getTopTenTests,\r\n  getSummaryByLocation,\r\n  getPastYearDataByLocation,\r\n  signUp,\r\n  signIn,\r\n  saveInfo,\r\n  getAccount,\r\n  getCountries\r\n};\r\n","import { useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { experimentalStyled } from '@material-ui/core';\r\nimport DashboardNavbar from './DashboardNavbar';\r\nimport DashboardSidebar from './DashboardSidebar';\r\n\r\nconst DashboardLayoutRoot = experimentalStyled('div')(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n  display: 'flex',\r\n  height: '100%',\r\n  overflow: 'hidden',\r\n  width: '100%'\r\n}));\r\n\r\nconst DashboardLayoutWrapper = experimentalStyled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n  paddingTop: 64,\r\n  [theme.breakpoints.up('lg')]: {\r\n    paddingLeft: 256\r\n  }\r\n}));\r\n\r\nconst DashboardLayoutContainer = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden'\r\n});\r\n\r\nconst DashboardLayoutContent = experimentalStyled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto'\r\n});\r\n\r\nconst DashboardLayout = () => {\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n\r\n  return (\r\n    <DashboardLayoutRoot>\r\n      <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <DashboardSidebar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <DashboardLayoutWrapper>\r\n        <DashboardLayoutContainer>\r\n          <DashboardLayoutContent>\r\n            <Outlet />\r\n          </DashboardLayoutContent>\r\n        </DashboardLayoutContainer>\r\n      </DashboardLayoutWrapper>\r\n    </DashboardLayoutRoot>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import { Link as RouterLink } from 'react-router-dom';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport Logo from './Logo';\r\n\r\nconst MainNavbar = (props) => (\r\n  <AppBar elevation={0} {...props}>\r\n    <Toolbar sx={{ height: 64 }}>\r\n      <RouterLink to=\"/\">\r\n        <Logo />\r\n      </RouterLink>\r\n    </Toolbar>\r\n  </AppBar>\r\n);\r\n\r\nexport default MainNavbar;\r\n","import { Outlet } from 'react-router-dom';\r\nimport { styled as experimentalStyled } from '@material-ui/core/styles';\r\nimport MainNavbar from './MainNavbar';\r\n\r\nconst MainLayoutRoot = experimentalStyled('div')(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.paper,\r\n  display: 'flex',\r\n  height: '100%',\r\n  overflow: 'hidden',\r\n  width: '100%'\r\n}));\r\n\r\nconst MainLayoutWrapper = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n  paddingTop: 64\r\n});\r\n\r\nconst MainLayoutContainer = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden'\r\n});\r\n\r\nconst MainLayoutContent = experimentalStyled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto'\r\n});\r\n\r\nconst MainLayout = () => (\r\n  <MainLayoutRoot>\r\n    <MainNavbar />\r\n    <MainLayoutWrapper>\r\n      <MainLayoutContainer>\r\n        <MainLayoutContent>\r\n          <Outlet />\r\n        </MainLayoutContent>\r\n      </MainLayoutContainer>\r\n    </MainLayoutWrapper>\r\n  </MainLayoutRoot>\r\n);\r\n\r\nexport default MainLayout;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  Snackbar\r\n} from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst AccountProfile = ({\r\n  account, ...props\r\n}) => {\r\n  const [alert, setAlert] = useState({});\r\n  const handleAlertClose = () => {\r\n    const alterSuccess = { isError: false, isOpen: false, message: '' };\r\n    setAlert(alterSuccess);\r\n  };\r\n  return (\r\n    <Card {...props}>\r\n      <CardContent>\r\n        <Box\r\n          sx={{\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            flexDirection: 'column'\r\n          }}\r\n        >\r\n          <Avatar\r\n            src=\"/static/images/avatars/avatar_1.png\"\r\n            sx={{\r\n              height: 100,\r\n              width: 100\r\n            }}\r\n          />\r\n          <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\r\n            {`${account.first_name} ${account.last_name}` }\r\n          </Typography>\r\n          <Typography color=\"textSecondary\" variant=\"body1\">\r\n            <b>Account Created In</b>\r\n            <br />\r\n            {account.reg_time}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <label htmlFor=\"avatar-image-upload\">\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            component=\"span\"\r\n            fullWidth\r\n          >\r\n            Upload picture\r\n          </Button>\r\n          <Snackbar\r\n            open={alert.isOpen}\r\n            autoHideDuration={2000}\r\n            onClose={handleAlertClose}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center'\r\n            }}\r\n          >\r\n            <Alert onClose={handleAlertClose} severity={alert.isError ? 'error' : 'success'}>\r\n              {alert.message}\r\n            </Alert>\r\n          </Snackbar>\r\n        </label>\r\n\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\nAccountProfile.propTypes = {\r\n  account: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default AccountProfile;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  Snackbar,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport sessionKey from 'src/constants/sessionKey';\r\nimport userService from '../../services/Server';\r\n\r\nconst AccountProfileDetails = ({\r\n  account, update, ...props\r\n}) => {\r\n  const [alert, setAlert] = useState({});\r\n\r\n  const saveDetail = async () => {\r\n    const res = await userService.saveInfo(account);\r\n    console.log(`res: ${JSON.stringify(res)}`);\r\n    const isSuccess = res.status === 200;\r\n    const alterSuccess = { isError: !isSuccess, isOpen: true, message: res.data.message };\r\n    setAlert(alterSuccess);\r\n    if (isSuccess) {\r\n      window.sessionStorage.setItem(sessionKey.ACCOUNT_KEY, JSON.stringify(account));\r\n    }\r\n  };\r\n  const handleChange = (event) => {\r\n    console.log(event);\r\n    update({\r\n      ...account,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    const alterSuccess = { isError: false, isOpen: false, message: '' };\r\n    setAlert(alterSuccess);\r\n  };\r\n\r\n  return (\r\n    <form autoComplete=\"off\" noValidate {...props}>\r\n      <Card>\r\n        <CardHeader subheader=\"The information can be edited\" title=\"Profile\" />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container spacing={3}>\r\n            <Grid item md={6} xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"first_name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={account.first_name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={6} xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"last_name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={account.last_name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={6} xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                disabled\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={account.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={6} xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Country\"\r\n                name=\"country\"\r\n                onChange={handleChange}\r\n                required\r\n                value={account.country}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            p: 2\r\n          }}\r\n        >\r\n          <Button onClick={saveDetail} color=\"primary\" variant=\"contained\">\r\n            Save details\r\n          </Button>\r\n          <Snackbar\r\n            open={alert.isOpen}\r\n            autoHideDuration={2000}\r\n            onClose={handleAlertClose}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center'\r\n            }}\r\n          >\r\n            <Alert onClose={handleAlertClose} severity={alert.isError ? 'error' : 'success'}>\r\n              {alert.message}\r\n            </Alert>\r\n          </Snackbar>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nAccountProfileDetails.propTypes = {\r\n  account: PropTypes.shape({\r\n    first_name: PropTypes.string.isRequired,\r\n    last_name: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    country: PropTypes.string.isRequired,\r\n  }),\r\n  update: PropTypes.func,\r\n};\r\n\r\nexport default AccountProfileDetails;\r\n","import { Helmet } from 'react-helmet';\r\nimport { useState } from 'react';\r\nimport { Box, Container, Grid } from '@material-ui/core';\r\nimport AccountProfile from 'src/components/account/AccountProfile';\r\nimport AccountProfileDetails from 'src/components/account/AccountProfileDetails';\r\nimport sessionKey from 'src/constants/sessionKey';\r\nimport currentUser from 'src/config/currentUser';\r\n\r\nconst Account = () => {\r\n  const session = window.sessionStorage;\r\n  const [accountVal, setAccountVal] = useState(() => {\r\n    if (session.getItem(sessionKey.ACCOUNT_KEY) == null) {\r\n      return {\r\n        email: currentUser().email.slice(1, -1),\r\n        first_name: '',\r\n        last_name: '',\r\n        country: ''\r\n      };\r\n    }\r\n    const account = JSON.parse(session.getItem(sessionKey.ACCOUNT_KEY));\r\n    return account;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Account | Task</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          minHeight: '100%',\r\n          py: 3\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={4} md={6} xs={12}>\r\n              <AccountProfile account={accountVal} />\r\n            </Grid>\r\n            <Grid item lg={8} md={6} xs={12}>\r\n              <AccountProfileDetails account={accountVal} update={setAccountVal} />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import { useState } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Link,\r\n  Snackbar,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useFirebase } from 'react-redux-firebase';\r\nimport paths from 'src/constants/route_path';\r\nimport service from 'src/services/Server';\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const firebase = useFirebase();\r\n  const auth = firebase.auth();\r\n  const [alertOpen, setAlertOpen] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const handleAlertClose = () => {\r\n    setAlertOpen(false);\r\n  };\r\n  const emailLogin = (credentials, { setSubmitting, setErrors }) => {\r\n    setErrorMsg('');\r\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)\r\n      .then(() => auth.signInWithEmailAndPassword(credentials.email, credentials.password)\r\n        .then(async () => {\r\n          // Signed in\r\n          const start = Date.now();\r\n          await service.getAccount(credentials.email);\r\n          console.log(`time consumed: ${Date.now() - start}`);\r\n          navigate(paths.dashboard);\r\n        })\r\n        .catch((error) => {\r\n          console.log(`error: ${error}`);\r\n          setSubmitting(false);\r\n          if (error === undefined || error.code === undefined) {\r\n            return;\r\n          }\r\n          if (error.code.includes('password')) {\r\n            setErrors({ password: error.message });\r\n          } else if (error.code.includes('user')) {\r\n            setErrors({ email: error.message });\r\n          } else {\r\n            setErrorMsg(error.message);\r\n            setAlertOpen(true);\r\n          }\r\n        }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Login | Material Kit</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: ''\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string()\r\n                .email('Must be a valid email')\r\n                .max(255)\r\n                .required('Email is required'),\r\n              password: Yup.string().max(255).required('Password is required')\r\n            })}\r\n            onSubmit={emailLogin}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography color=\"textPrimary\" variant=\"h2\">\r\n                    Sign in\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    to browse Covid-19 dashboard\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign in now\r\n                  </Button>\r\n                  <Snackbar\r\n                    open={alertOpen}\r\n                    autoHideDuration={2000}\r\n                    onClose={handleAlertClose}\r\n                    anchorOrigin={{\r\n                      vertical: 'top',\r\n                      horizontal: 'center'\r\n                    }}\r\n                  >\r\n                    <Alert onClose={handleAlertClose} severity=\"error\">\r\n                      {errorMsg}\r\n                    </Alert>\r\n                  </Snackbar>\r\n                </Box>\r\n                <Typography color=\"textSecondary\" variant=\"body1\">\r\n                  Don&apos;t have an account?\r\n                  {' '}\r\n                  <Link component={RouterLink} to={paths.register} variant=\"h6\">\r\n                    Sign up\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Helmet } from 'react-helmet';\r\nimport { Box, Container, Typography } from '@material-ui/core';\r\n\r\nconst NotFound = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>404 | Material Kit</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        justifyContent: 'center'\r\n      }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Typography align=\"center\" color=\"textPrimary\" variant=\"h1\">\r\n          404: The page you are looking for isn’t here\r\n        </Typography>\r\n        <Typography align=\"center\" color=\"textPrimary\" variant=\"subtitle2\">\r\n          You either tried some shady route or you came here by mistake.\r\n          Whichever it is, try using the navigation\r\n        </Typography>\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <img\r\n            alt=\"Under development\"\r\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\r\n            style={{\r\n              marginTop: 50,\r\n              display: 'inline-block',\r\n              maxWidth: '100%',\r\n              width: 560\r\n            }}\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default NotFound;\r\n","/* eslint-disable no-unused-vars */\r\nimport\r\n{\r\n  Link as RouterLink,\r\n  useNavigate\r\n} from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { useFirebase } from 'react-redux-firebase';\r\nimport paths from 'src/constants/route_path';\r\nimport userService from '../services/Server';\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const firebase = useFirebase();\r\n  const auth = firebase.auth();\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Register | Material Kit</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              firstName: '',\r\n              lastName: '',\r\n              password: '',\r\n              policy: false\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string()\r\n                .email('Must be a valid email')\r\n                .max(255)\r\n                .required('Email is required'),\r\n              firstName: Yup.string()\r\n                .max(255)\r\n                .required('First name is required'),\r\n              lastName: Yup.string().max(255).required('Last name is required'),\r\n              password: Yup.string().max(255).required('password is required').matches(\r\n                /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n                `Must Contain 8 Characters, One Uppercase, One Lowercase,\r\n                One Number and one special case Character`\r\n              ),\r\n              policy: Yup.boolean().oneOf([true], 'This field must be checked')\r\n            })}\r\n            onSubmit={(creds, { setSubmitting, setErrors }) => {\r\n              auth.createUserWithEmailAndPassword(creds.email, creds.password)\r\n                .then(() => {\r\n                  navigate(paths.login, { replace: true });\r\n                  userService.signUp(creds);\r\n                })\r\n                .catch((error) => {\r\n                  const errorCode = error.code;\r\n                  const errorMessage = error.message;\r\n                  console.log(`error code: ${errorCode}, message: ${errorMessage}`);\r\n                  console.error(`error: ${error}`);\r\n                  if (errorMessage.includes('password')) {\r\n                    setErrors({ password: error.message });\r\n                  } else if (errorMessage.includes('name')) {\r\n                    setErrors({ firstName: error.message });\r\n                  } else {\r\n                    setErrors({ email: error.message });\r\n                  }\r\n\r\n                  setSubmitting(false);\r\n                });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography color=\"textPrimary\" variant=\"h2\">\r\n                    Create new account\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Use your email to create new account\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.firstName && errors.firstName)}\r\n                  fullWidth\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  label=\"First name\"\r\n                  margin=\"normal\"\r\n                  name=\"firstName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.lastName && errors.lastName)}\r\n                  fullWidth\r\n                  helperText={touched.lastName && errors.lastName}\r\n                  label=\"Last name\"\r\n                  margin=\"normal\"\r\n                  name=\"lastName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box\r\n                  sx={{\r\n                    alignItems: 'center',\r\n                    display: 'flex',\r\n                    ml: -1\r\n                  }}\r\n                >\r\n                  <Checkbox\r\n                    checked={values.policy}\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography color=\"textSecondary\" variant=\"body1\">\r\n                    I have read the\r\n                    {' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n                {Boolean(touched.policy && errors.policy) && (\r\n                  <FormHelperText error>{errors.policy}</FormHelperText>\r\n                )}\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign up now\r\n                  </Button>\r\n                </Box>\r\n                <Typography color=\"textSecondary\" variant=\"body1\">\r\n                  Have an account?\r\n                  {' '}\r\n                  <Link component={RouterLink} to={paths.login} variant=\"h6\">\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import\r\n{\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CardData = ({ metric, metricValue, ...props }) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Grid container spacing={2} sx={{ justifyContent: 'space-between' }}>\r\n        <Grid item>\r\n          <Typography color=\"textSecondary\" gutterBottom variant=\"subtitle2\">\r\n            {metric}\r\n          </Typography>\r\n          <Typography color=\"textPrimary\" variant=\"h3\">\r\n            {metricValue}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nCardData.propTypes = {\r\n  metric: PropTypes.string.isRequired,\r\n  metricValue: PropTypes.string.isRequired\r\n};\r\n\r\nexport default CardData;\r\n","export default function numberWithCommas(x) {\r\n  if (x === undefined) return '0';\r\n  return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ',');\r\n}\r\n","import\r\n{\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { React, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport service from 'src/services/Server';\r\n\r\nconst Country = ({\r\n  metricValue, valueChanged\r\n}) => {\r\n  const location = useLocation();\r\n  const [value, setValue] = useState({ title: metricValue, name: metricValue });\r\n  const [countries, setCountries] = useState([{ title: 'New Zealand', name: 'New Zealand' }]);\r\n  useEffect(async () => {\r\n    const countryArr = await service.getCountries();\r\n    if (countryArr !== undefined && countryArr.length > 0) {\r\n      const array = [];\r\n      countryArr.map((item) => array.push({ title: item.country, name: item.country }));\r\n      setCountries(array);\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"combo-box-demo\"\r\n      value={value}\r\n      getOptionSelected={(option, optionValue) => option.name === optionValue.name}\r\n      onChange={(event, newValue) => {\r\n        if (newValue !== null && newValue.name !== value.name) {\r\n          setValue(newValue);\r\n          valueChanged(newValue.name);\r\n        }\r\n      }}\r\n      options={countries}\r\n      getOptionLabel={(option) => option.title}\r\n      style={{ width: 400 }}\r\n      renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n    />\r\n  );\r\n};\r\n\r\nCountry.propTypes = {\r\n  metricValue: PropTypes.string.isRequired,\r\n  valueChanged: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Country;\r\n","import\r\n{\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport Country from 'src/components/statistic/Country';\r\n\r\nconst CardComboData = ({\r\n  metric, metricValue, valueChanged, ...props\r\n}) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Grid container spacing={1} sx={{ justifyContent: 'space-between' }}>\r\n        <Grid item>\r\n          <Typography color=\"textPrimary\" variant=\"h3\">\r\n            {metric}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Country metricValue={metricValue} valueChanged={valueChanged} />\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nCardComboData.propTypes = {\r\n  metric: PropTypes.string.isRequired,\r\n  metricValue: PropTypes.string.isRequired,\r\n  valueChanged: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CardComboData;\r\n","/* eslint-disable react/prop-types */\r\nimport {\r\n  Box,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport CardData from 'src/components/statistic/CardData';\r\nimport numberWithCommas from 'src/utils/numberWithCommas';\r\nimport CardComboData from 'src/components/statistic/CardComboData';\r\n\r\nconst CardCluster = ({ summary, locationChanged }) => {\r\n  const dashInfo = {\r\n    country: summary.location, // `User Location: ${summary.location}`,\r\n    date: `Report Date: ${summary.date}`\r\n  };\r\n\r\n  const detailDatas = [\r\n    {\r\n      label: 'Total Confirmed Cases',\r\n      value: numberWithCommas(summary.total_cases) || 'N/A'\r\n    },\r\n    {\r\n      label: 'New Confirmed Cases',\r\n      value: `${numberWithCommas(summary.new_cases)}` || 'N/A'\r\n    },\r\n    {\r\n      label: 'Total Deaths',\r\n      value: numberWithCommas(summary.total_deaths) || 'N/A'\r\n    },\r\n    {\r\n      label: 'New Deaths',\r\n      value: `${numberWithCommas(summary.new_deaths)}` || 'N/A'\r\n    },\r\n    {\r\n      label: 'Total COVID-19 Tests',\r\n      value: numberWithCommas(summary.total_tests) || 'N/A'\r\n    },\r\n    {\r\n      label: 'New COVID-19 Tests',\r\n      value: numberWithCommas(summary.new_tests) || 'N/A'\r\n    },\r\n    {\r\n      label: 'Total COVID-19 Tests / Thousand ppl',\r\n      value: numberWithCommas(summary.total_tests_per_thousand) || 'N/A'\r\n    },\r\n    {\r\n      label: 'New COVID-19 Tests / Thousand ppl',\r\n      value: numberWithCommas(summary.new_tests_per_thousand) || 'N/A'\r\n    },\r\n  ];\r\n\r\n  // const proportion = { label: `${summary.location}: Total Cases`, value: summary.total_cases };\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: '100%',\r\n        position: 'relative'\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item lg={12} sm={12} xl={12} xs={12}>\r\n          <CardComboData metric=\"Location\" metricValue={dashInfo.country} valueChanged={locationChanged} />\r\n        </Grid>\r\n        {/* <Grid item lg={12} sm={12} xl={12} xs={12}>\r\n          <CardData metric=\"\" metricValue={dashInfo.country} />\r\n        </Grid> */}\r\n        <Grid item lg={12} sm={12} xl={12} xs={12}>\r\n          <CardData metric=\"\" metricValue={dashInfo.date} />\r\n        </Grid>\r\n        {detailDatas.map((data) => (\r\n          <Grid item lg={6} sm={6} xl={6} xs={6} key={data.label}>\r\n            <CardData metric={data.label} metricValue={data.value} />\r\n          </Grid>\r\n        ))}\r\n        {/* <Grid item lg={12} sm={12} xl={12} xs={12} key={proportion.label}>\r\n          <CardData metric={proportion.label} metricValue={proportion.value} />\r\n        </Grid> */}\r\n\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CardCluster;\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport sessionKey from 'src/constants/sessionKey';\r\n\r\nconst TrendLine = ({ past12Month, confirmed }) => {\r\n  const myData = past12Month;\r\n  const data = {\r\n    labels: myData.map((i) => i.date),\r\n    datasets: [\r\n      {\r\n        label: (confirmed === true ? 'New Confirmed Cases' : 'New COVID-19 Tests'),\r\n        data: myData.map((i) => (confirmed === true ? i.new_cases : i.new_tests)),\r\n        fill: false,\r\n        backgroundColor: 'rgba(75,192,192,0.2)',\r\n        borderColor: (confirmed === true ? 'rgba(171, 68, 138, 1)' : 'rgba(75,192,192,1)'),\r\n      },\r\n    ]\r\n  };\r\n  return (\r\n    <div>\r\n      <Line\r\n        data={data}\r\n        options={{\r\n          title: {\r\n            display: true,\r\n            text: (confirmed === true ? 'New Confirmed Cases' : 'New COVID-19 Tests'),\r\n            fontSize: 25,\r\n          },\r\n          legend: {\r\n            display: true,\r\n            position: 'top'\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default TrendLine;\r\n","import {\r\n  Container,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport { useLocation } from 'react-router-dom';\r\nimport SummaryCluster from 'src/components/statistic/SummaryClusterLocal';\r\n// import Barchart from 'src/components/statistic/BarChart';\r\nimport Trendline from 'src/components/statistic/TrendLine';\r\nimport React, { useEffect, useState } from 'react';\r\nimport sessionKey from 'src/constants/sessionKey';\r\nimport service from '../../services/Server';\r\n\r\n// TODO depend on user's setting\r\n// const LOCATION = 'NZL';\r\nconst session = window.sessionStorage;\r\n\r\nconst LocalCovidStatistics = () => {\r\n  const [initLocal, setInitLocal] = useState({\r\n    summary: '',\r\n    past12Month: null,\r\n    location: sessionKey.DEFAULT_COUNTRY\r\n  });\r\n  const location = useLocation();\r\n\r\n  const loadData = async (varLocation) => {\r\n    const res = await service.getSummaryByLocation(varLocation);\r\n    const resPast12Month = await service.getPastYearDataByLocation(varLocation);\r\n    setInitLocal({\r\n      summary: res[0],\r\n      past12Month: resPast12Month,\r\n      location: varLocation\r\n    });\r\n  };\r\n\r\n  const locationChanged = (newLocation) => {\r\n    setInitLocal({\r\n      summary: '',\r\n      past12Month: null,\r\n      location: newLocation\r\n    });\r\n    if (newLocation !== undefined && newLocation !== '') {\r\n      loadData(newLocation);\r\n      const accountVar = session.getItem(sessionKey.ACCOUNT_KEY);\r\n      if (accountVar != null) {\r\n        const account = JSON.parse(accountVar);\r\n        account.selectedCountry = newLocation;\r\n        window.sessionStorage.setItem(sessionKey.ACCOUNT_KEY, JSON.stringify(account));\r\n      }\r\n    }\r\n  };\r\n\r\n  const loadDataByAccount = async () => {\r\n    console.log(`location.pathname: ${location.pathname}`);\r\n    let currentLocation = sessionKey.DEFAULT_COUNTRY;\r\n    const accountVar = session.getItem(sessionKey.ACCOUNT_KEY);\r\n    if (accountVar != null) {\r\n      const account = JSON.parse(accountVar);\r\n      currentLocation = account.selectedCountry !== undefined ? account.selectedCountry : sessionKey.DEFAULT_COUNTRY;\r\n    }\r\n    await loadData(currentLocation);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDataByAccount();\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <Container maxWidth={false}>\r\n      <Grid container spacing={2}>\r\n        <Grid item lg={6} md={6} xl={6} xs={6}>\r\n          {initLocal.summary\r\n            ? <SummaryCluster summary={initLocal.summary} locationChanged={locationChanged} />\r\n            : 'loading....'}\r\n        </Grid>\r\n        <Grid item lg={6} md={6} xl={6} xs={6}>\r\n          {initLocal.past12Month\r\n            ? <Trendline past12Month={initLocal.past12Month} confirmed />\r\n            : '' }\r\n          {initLocal.past12Month\r\n            ? <Trendline past12Month={initLocal.past12Month} confirmed={false} />\r\n            : '' }\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LocalCovidStatistics;\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport numberWithCommas from 'src/utils/numberWithCommas';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 251,\r\n  },\r\n});\r\n\r\nfunction createData(name, cases) {\r\n  return { name, cases };\r\n}\r\n\r\nexport default function CasesRank({ topTenCases }) {\r\n  const classes = useStyles();\r\n\r\n  const rows = topTenCases.slice(0, 5).map((i) => createData(i.location, i.total_cases));\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Country</TableCell>\r\n            <TableCell align=\"right\">Cases</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{numberWithCommas(row.cases)}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport numberWithCommas from 'src/utils/numberWithCommas';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 251,\r\n  },\r\n});\r\n\r\nfunction createData(name, tests) {\r\n  return { name, tests };\r\n}\r\n\r\nexport default function DeathRank({ topTenTests }) {\r\n  const classes = useStyles();\r\n\r\n  const rows = topTenTests.slice(0, 5).map((i) => createData(i.location, i.total_tests));\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Country</TableCell>\r\n            <TableCell align=\"right\">Test units</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{numberWithCommas(row.tests)}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport CardData from 'src/components/statistic/CardData';\r\nimport PropTypes from 'prop-types';\r\nimport numberWithCommas from 'src/utils/numberWithCommas';\r\nimport CasesRank from './CasesRank';\r\nimport TestsRank from './TestsRank';\r\n\r\nconst SummaryClusterTotal = ({ initWorld }) => {\r\n  const { worldSummary, topTenCases, topTenTests } = initWorld;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: '100%',\r\n        position: 'relative'\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n\r\n        <Grid item lg={12} sm={12} xl={12} xs={12}>\r\n          <CardData metric=\"Report date\" metricValue={worldSummary ? worldSummary.date : 'loading....'} />\r\n        </Grid>\r\n\r\n        <Grid item lg={6} sm={6} xl={6} xs={6}>\r\n          <CardData metric=\" Total Confirmed Cases\" metricValue={worldSummary ? numberWithCommas(worldSummary.total_cases) : 'loading...'} />\r\n        </Grid>\r\n\r\n        <Grid item lg={6} sm={6} xl={6} xs={6}>\r\n          <CardData metric=\" New Confirmed Cases \" metricValue={worldSummary ? numberWithCommas(worldSummary.new_cases) : 'loading....'} />\r\n        </Grid>\r\n\r\n        <Grid item lg={6} sm={6} xl={6} xs={6}>\r\n          <CardData metric=\" Total Deaths\" metricValue={worldSummary ? numberWithCommas(worldSummary.total_deaths) : 'loading...'} />\r\n        </Grid>\r\n\r\n        <Grid item lg={6} sm={6} xl={6} xs={6}>\r\n          <CardData metric=\" New Deaths\" metricValue={worldSummary ? numberWithCommas(worldSummary.new_deaths) : 'loading....'} />\r\n        </Grid>\r\n\r\n        <Grid item lg={6} sm={6} xl={6} xs={6} key={1}>\r\n          <CardData metric=\"\" metricValue=\"Total cases\" />\r\n          {topTenCases\r\n            ? <CasesRank topTenCases={topTenCases} />\r\n            : <CardData metric=\"loading...\" metricValue=\"\" />}\r\n        </Grid>\r\n        <Grid item lg={6} sm={6} xl={6} xs={6} key={2}>\r\n          <CardData metric=\"\" metricValue=\"Total COVID-19 Tests\" />\r\n          {topTenTests\r\n            ? <TestsRank topTenTests={topTenTests} />\r\n            : <CardData metric=\"loading...\" metricValue=\"\" />}\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </Box>\r\n  );\r\n};\r\n\r\nSummaryClusterTotal.propTypes = {\r\n  initWorld: PropTypes.shape({\r\n    worldSummary: PropTypes.string,\r\n    topTenCases: PropTypes.number,\r\n    topTenTests: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default SummaryClusterTotal;\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nconst PieChart = ({ topTenCases }) => {\r\n  const top5 = topTenCases.slice(0, 5);\r\n  const data = {\r\n    labels: top5.map((i) => i.location),\r\n    datasets: [\r\n      {\r\n        label: '# of Cases',\r\n        data: top5.map((i) => i.total_cases),\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.2)',\r\n          'rgba(54, 162, 235, 0.2)',\r\n          'rgba(255, 206, 86, 0.2)',\r\n          'rgba(75, 192, 192, 0.2)',\r\n          'rgba(153, 102, 255, 0.2)',\r\n          'rgba(255, 159, 64, 0.2)',\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n          'rgba(255, 206, 86, 1)',\r\n          'rgba(75, 192, 192, 1)',\r\n          'rgba(153, 102, 255, 1)',\r\n          'rgba(255, 159, 64, 1)',\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <>\r\n      <Pie\r\n        data={data}\r\n        width={350}\r\n        height={350}\r\n        options={{\r\n          title: {\r\n            display: true,\r\n            text: 'Top 5 Total Deaths by Country',\r\n            fontSize: 25,\r\n          },\r\n          legend: {\r\n            display: true,\r\n            position: 'left'\r\n          },\r\n          maintainAspectRatio: false\r\n\r\n        }}\r\n\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","/* eslint-disable react/prop-types */\r\nimport\r\n{\r\n  MapContainer,\r\n  MapConsumer,\r\n  TileLayer,\r\n  CircleMarker,\r\n  Popup,\r\n} from 'react-leaflet';\r\nimport\r\n{\r\n  Box,\r\n} from '@material-ui/core';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport numberWithCommas from 'src/utils/numberWithCommas';\r\n\r\nconst Map = ({ topTenCases }) => {\r\n  const totalSumCases = topTenCases.reduce((a, b) => a + b.total_cases, 0);\r\n  const colorFunc = (props) => {\r\n    if (props <= 0.1) return '#FF8000';\r\n    if (props > 0.1 && props < 0.2) {\r\n      return '#0000FF';\r\n    }\r\n    return '#ff0000';\r\n  };\r\n\r\n  const countries = topTenCases.map((i) => ({\r\n    name: i.location,\r\n    color: colorFunc(i.total_cases / totalSumCases),\r\n    radius: (i.total_cases / totalSumCases) * 12,\r\n    location: [Number(i.latitude), Number(i.longitude)],\r\n    cases: i.total_cases,\r\n    deaths: i.total_deaths\r\n  }));\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: 350,\r\n        position: 'relative'\r\n      }}\r\n    >\r\n      <MapContainer\r\n        center={[49, 72]}\r\n        zoom={1}\r\n        scrollWheelZoom={false}\r\n        style={{ height: '100%', width: '100%' }}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <MapConsumer>\r\n          {(map) => {\r\n            console.log('map center:', map.getCenter());\r\n            map.on('click', (e) => {\r\n              const { lat, lng } = e.latlng;\r\n              console.log(`MapConsumer, ${map.getZoom()},${map.getCenter()}, ${lat}, ${lng}`);\r\n            });\r\n            return null;\r\n          }}\r\n        </MapConsumer>\r\n        {countries.map((country, index) => (\r\n          <CircleMarker\r\n            center={country.location}\r\n            key={index.toString()}\r\n            fillColor={country.color}\r\n            color={country.color}\r\n            radius={5 * country.radius}\r\n            fillOpacity={1}\r\n          >\r\n            <Popup>\r\n              <b>{country.name}</b>\r\n              <br />\r\n\r\n              Total cases :\r\n              {numberWithCommas(country.cases)}\r\n              <br />\r\n              Total deaths :\r\n              {numberWithCommas(country.deaths)}\r\n            </Popup>\r\n          </CircleMarker>\r\n        ))}\r\n      </MapContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import {\r\n  Container,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport SummaryClusterTotal from 'src/components/statistic/SummaryClusterTotal';\r\nimport { useEffect, useState } from 'react';\r\n// import moment from 'moment';\r\nimport PieChart from 'src/components/statistic/PieChart';\r\nimport service from '../../services/Server';\r\nimport Map from './Map';\r\n\r\nconst WorldCovidStatistics = () => {\r\n  const [initWorld, setInitWorld] = useState({\r\n    worldSummary: '',\r\n    topTenCases: 0,\r\n    topTenDeaths: 0,\r\n  });\r\n\r\n  // const todayDate = moment(new Date()).format('YYYY-MM-DD');\r\n  useEffect(async () => {\r\n    const resSummary = await service.getSummaryOfWorld();\r\n    const resTopTenCases = await service.getTopTenCases();\r\n    const resTopTenTests = await service.getTopTenTests();\r\n    setInitWorld({\r\n      worldSummary: resSummary[0],\r\n      topTenCases: resTopTenCases,\r\n      topTenTests: resTopTenTests,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth={false}>\r\n      <Grid container spacing={2}>\r\n        <Grid item lg={6} md={6} xl={6} xs={6}>\r\n          <SummaryClusterTotal initWorld={initWorld} />\r\n        </Grid>\r\n        <Grid item lg={6} md={6} xl={6} xs={6}>\r\n          {initWorld.topTenCases\r\n            ? (\r\n              <Grid container spacing={3}>\r\n                <Grid item lg={12} sm={12} xl={12} xs={12}>\r\n                  <Map topTenCases={initWorld.topTenCases} />\r\n                </Grid>\r\n                <Grid item lg={12} sm={12} xl={12} xs={12}>\r\n                  <PieChart topTenCases={initWorld.topTenCases} />\r\n                </Grid>\r\n              </Grid>\r\n            )\r\n            : 'loading...'}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default WorldCovidStatistics;\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport sessionKey from 'src/constants/sessionKey';\r\n\r\nconst DoubleTrendLine = ({ array, confirmed }) => {\r\n  // const myData = past12Month;\r\n  const dataset = () => {\r\n    const result = [];\r\n    for (let index = 0; index < array.length; index++) {\r\n      result.push({\r\n        label: array[index].country,\r\n        data: array[index].line.map((i) => (confirmed === true ? i.new_cases : i.new_tests)),\r\n        fill: false,\r\n        backgroundColor: 'rgba(75,192,192,0.2)',\r\n        borderColor: (index === 0 ? 'rgba(171, 68, 138, 1)' : 'rgba(75,192,192,1)'),\r\n      });\r\n      if (array.length > 1 && (array[0].country === array[1].country)) {\r\n        break;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n  const data = {\r\n    labels: array[0].line.map((i) => i.date),\r\n    datasets: dataset()\r\n  };\r\n  return (\r\n    <div>\r\n      <Line\r\n        data={data}\r\n        options={{\r\n          title: {\r\n            display: false,\r\n            text: (confirmed === true ? 'New Confirmed Cases' : 'New COVID-19 Tests'),\r\n            fontSize: 25,\r\n          },\r\n          legend: {\r\n            display: true,\r\n            position: 'bottom'\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default DoubleTrendLine;\r\n","import {\r\n  Container,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport { React, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Country from 'src/components/statistic/Country';\r\nimport DoubleTrendLine from 'src/components/statistic/DoubleTrendLine';\r\nimport service from 'src/services/Server';\r\n\r\nconst clone = require('clone');\r\n\r\nconst VPCompareCovidStatistics = ({ defaultCountry }) => {\r\n  const [dataset, setDataset] = useState([{ country: defaultCountry, line: [] },\r\n    { country: defaultCountry, line: [] }]);\r\n  const refreshLines = async (index, newLocation, isCopy = false) => {\r\n    const resPast12Month = await service.getPastYearDataByLocation(newLocation);\r\n    const datasetClone = clone(dataset);\r\n    datasetClone[index].country = newLocation;\r\n    datasetClone[index].line = resPast12Month;\r\n    if (isCopy) {\r\n      datasetClone[index + 1].country = newLocation;\r\n      datasetClone[index + 1].line = resPast12Month;\r\n    }\r\n    setDataset(datasetClone);\r\n  };\r\n\r\n  const locationChanged1 = (newLocation) => {\r\n    refreshLines(0, newLocation);\r\n  };\r\n\r\n  const locationChanged2 = (newLocation) => {\r\n    refreshLines(1, newLocation);\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshLines(0, defaultCountry, true);\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth={false}>\r\n      <Grid container spacing={2}>\r\n        <Grid item lg={6} md={6} xl={6} xs={6}>\r\n          <Country metricValue={dataset[0].country} valueChanged={locationChanged1} />\r\n        </Grid>\r\n        <Grid item lg={6} md={6} xl={6} xs={6}>\r\n          <Country metricValue={dataset[1].country} valueChanged={locationChanged2} />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={2}>\r\n        <Grid item lg={12} md={12} xl={12} xs={12}>\r\n          <DoubleTrendLine array={dataset} confirmed />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nVPCompareCovidStatistics.propTypes = {\r\n  defaultCountry: PropTypes.string,\r\n};\r\n\r\nexport default VPCompareCovidStatistics;\r\n","/* eslint-disable no-unused-vars */\r\nimport { React, useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport {\r\n  Box,\r\n} from '@material-ui/core';\r\n\r\n// import Map from 'src/components/statistic/Map';\r\nimport LocalCovidStatistics from 'src/components/statistic/LocalCovidStatistics';\r\nimport WorldCovidStatistics from 'src/components/statistic/WorldCovidStatistics';\r\nimport VPCompareCovidStatistics from 'src/components/statistic/VPCompareCovidStatistics';\r\n\r\nconst DashboardTask = () => {\r\n  const [value, setValue] = useState('one');\r\n\r\n  const handleChange = (event, parValue) => {\r\n    setValue(parValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Dashboard | Task</title>\r\n      </Helmet>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs value={value} onChange={handleChange}>\r\n          <Tab value=\"one\" label=\"Local statistic\" />\r\n          <Tab value=\"two\" label=\"world statistics\" />\r\n          <Tab value=\"three\" label=\"comparison of new cases\" />\r\n        </Tabs>\r\n      </AppBar>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          minHeight: '50%',\r\n          py: 1\r\n        }}\r\n      >\r\n        {value === 'one' && <LocalCovidStatistics />}\r\n        {value === 'two' && <WorldCovidStatistics />}\r\n        {value === 'three' && <VPCompareCovidStatistics defaultCountry=\"New Zealand\" />}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardTask;\r\n","import { Navigate } from 'react-router-dom';\r\nimport DashboardLayout from 'src/components/DashboardLayout';\r\nimport MainLayout from 'src/components/MainLayout';\r\nimport Account from 'src/pages/Account';\r\nimport Login from 'src/pages/Login';\r\nimport NotFound from 'src/pages/NotFound';\r\nimport Register from 'src/pages/Register';\r\n// import Settings from 'src/pages/Settings';\r\nimport Dashboard from 'src/pages/Dashboard';\r\n\r\nconst routes = (isLoggedIn) => [\r\n  {\r\n    path: '/',\r\n    element: <MainLayout />,\r\n    children: [\r\n      { path: 'login', element: <Login /> },\r\n      { path: 'register', element: <Register /> },\r\n      { path: '404', element: <NotFound /> },\r\n      { path: '/', element: <Login /> },\r\n      { path: 'app', element: <NotFound /> },\r\n      { path: '*', element: <NotFound /> },\r\n    ]\r\n  },\r\n  {\r\n    path: 'app',\r\n    element: isLoggedIn ? <DashboardLayout /> : <Navigate to=\"/login\" />,\r\n    children: [\r\n      { path: 'account', element: <Account /> },\r\n      { path: '*', element: <NotFound /> },\r\n      { path: 'dashboard', element: <Dashboard /> },\r\n    ]\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import { createMuiTheme, colors } from '@material-ui/core';\r\nimport shadows from './shadows';\r\nimport typography from './typography';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: '#F4F6F8',\r\n      paper: colors.common.white\r\n    },\r\n    primary: {\r\n      contrastText: '#ffffff',\r\n      main: '#5664d2'\r\n    },\r\n    text: {\r\n      primary: '#172b4d',\r\n      secondary: '#6b778c'\r\n    }\r\n  },\r\n  shadows,\r\n  typography\r\n});\r\n\r\nexport default theme;\r\n","export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","const logger = () => {\r\n  let oldConsoleLog = null;\r\n  const pub = {};\r\n\r\n  pub.enableLogger = function enableLogger() {\r\n    if (oldConsoleLog == null) return;\r\n    window.console.log = oldConsoleLog;\r\n  };\r\n\r\n  pub.disableLogger = function disableLogger() {\r\n    oldConsoleLog = console.log;\r\n    window.console.log = () => {};\r\n  };\r\n\r\n  return pub;\r\n};\r\n\r\nexport default logger;\r\n","import firebase from 'firebase/app';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport GlobalStyles from 'src/components/GlobalStyles';\r\nimport routes from 'src/config/routes';\r\nimport theme from 'src/theme';\r\nimport {\r\n  isLoaded,\r\n  isEmpty\r\n} from 'react-redux-firebase';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport logger from 'src/config/logger';\r\n\r\nconst App = () => {\r\n  logger().enableLogger();\r\n  const auth = firebase.auth();\r\n  const routing = useRoutes(routes(isLoaded(auth) && !isEmpty(auth.currentUser)));\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      {routing}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore';\r\nimport {\r\n  ReactReduxFirebaseProvider,\r\n  getFirebase,\r\n} from 'react-redux-firebase';\r\nimport { Provider } from 'react-redux';\r\nimport firebase from 'firebase/app';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport rootReducer from './reducer/rootReducer';\r\nimport fbConfig from './config/fbConfig';\r\nimport App from './App';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reduxFirestore(firebase, fbConfig)\r\n  )\r\n);\r\n\r\nconst profileSpecificProps = {\r\n  userProfile: 'users',\r\n  useFirestoreForProfile: true,\r\n  enableRedirectHandling: false,\r\n  resetBeforeLogin: false\r\n};\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: profileSpecificProps,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance,\r\n};\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <ReactReduxFirebaseProvider {...rrfProps}>\r\n        <App />\r\n      </ReactReduxFirebaseProvider>\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}